/*
 * The barebones version of the Network States game w/o using MUD. Lets players
 * spawn into a small grid with 10 troops, then move those troops around to 
 * conquer surrounding territories. 
 *
 * Warning. Generated by GPT4, so there are errors. 
 */

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract NetworkStates {
    // Tile definition
    struct Tile {
        address owner;
        uint256 resources;
    }

    // Constants
    uint8 constant GRID_SIZE = 20;

    // State
    Tile[GRID_SIZE][GRID_SIZE] public grid;

    // Check if the tile is unowned
    modifier isUnowned(uint8 x, uint8 y) {
        require(grid[x][y].owner == address(0), "Tile is already owned!");
        _;
    }

    // Check if the tile is owned by the sender
    modifier isOwnedBySender(uint8 x, uint8 y) {
        require(grid[x][y].owner == msg.sender, "Tile is not owned by sender!");
        _;
    }

    // Function to spawn a player on the grid
    function spawn(uint8 x, uint8 y) external isUnowned(x, y) {
        grid[x][y].owner = msg.sender;
        grid[x][y].resources = 10;
    }

    // Function to move resources to an adjacent tile
    function move(
        uint8 fromX,
        uint8 fromY,
        uint8 toX,
        uint8 toY,
        uint256 amount
    ) external isOwnedBySender(fromX, fromY) {
        require(
            amount <= grid[fromX][fromY].resources,
            "Not enough resources!"
        );

        // Ensure the destination is adjacent on the cardinal plane
        require(
            (fromX == toX && (fromY == toY + 1 || fromY == toY - 1)) ||
                (fromY == toY && (fromX == toX + 1 || fromX == toX - 1)),
            "Not an adjacent tile!"
        );

        // If moving to an unowned tile
        if (grid[toX][toY].owner == address(0)) {
            grid[toX][toY].owner = msg.sender;
            grid[toX][toY].resources = amount;
            grid[fromX][fromY].resources -= amount;
        }
        // If moving to an enemy tile
        else if (grid[toX][toY].owner != msg.sender) {
            // If you have more resources than the enemy tile
            if (amount > grid[toX][toY].resources) {
                grid[toX][toY].owner = msg.sender;
                grid[toX][toY].resources = amount - grid[toX][toY].resources;
            } else {
                grid[toX][toY].resources -= amount;
            }
            grid[fromX][fromY].resources -= amount;
        }
        // If moving to own tile
        else {
            grid[toX][toY].resources += amount;
            grid[fromX][fromY].resources -= amount;
        }
    }
}
